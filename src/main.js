/* ----------------------------------------------
 * Generated by CaesarDeveloper on 2022-6-16 0:57:35
 * Licensed under MIT License.
 * Main script to render DC Gaskets webpage. 
 * APP: @init, @i18Loader, @updateContent
 * ---------------------------------------------- */
import LoadingScreen from './components/loadingScreen.js'
import NavBar from './components/navbar.js';
import Hero from './components/hero.js';
import WhatsAppWidget from './components/whatsappwidget.js';
import ModalLogin from './components/modalLogin.js';
import SectionProducts from './components/sectionProducts.js';
import SectionDevelopment from './components/sectionDevelopment.js';
import SectionBanner from './components/sectionBanner.js';
import SectionClients from './components/sectionClients.js';

import Footer from './components/footer.js';

import json_en from './assets/i18n/en.json';
import json_es from './assets/i18n/es.json';


(($) => {

    let i18Jsons = [];

    const APP = (() => {

        const init = () => {

            const start = new Date();
            const loadingScreen = new LoadingScreen();
            const sectionProducts = new SectionProducts();
            const nav = new NavBar();
            const hero = new Hero({
                title: 'Innovación y tecnología de sellado para la industria automotriz.',
                subtitle: '',
                actionButtonText: 'Learn More'
            });

            const whatsappWidget = new WhatsAppWidget({
                phone: '524777106000',
                message: 'Mensaje default para sporte de DC Gaskets'
            });

            const modalLogin = new ModalLogin({
                title: 'Iniciar sesión',
                btnCancelButtonText: 'Cancelar',
                btnLoginText: 'Iniciar sesión',
            });

            const footer = new Footer({
                company: 'DC Gaskets',
                year: new Date().getFullYear()
            });

            const sectionDevelopment = new SectionDevelopment();
            const sectionBanner = new SectionBanner();
            const sectionClients = new SectionClients();

            try {
                console.log('Iniciando app...');

                i18Jsons.push(json_es);
                i18Jsons.push(json_en);

                document.body.insertAdjacentHTML("afterbegin", loadingScreen.render());
                document.querySelector('body').classList.add('stop-scrolling');

                document.getElementById("app").insertAdjacentHTML("afterbegin", nav.render());


                document.getElementById("app").insertAdjacentHTML("afterbegin", sectionClients.render());
                document.getElementById("app").insertAdjacentHTML("afterbegin", sectionBanner.render());
                document.getElementById("app").insertAdjacentHTML("afterbegin", sectionDevelopment.render());
                document.getElementById("app").insertAdjacentHTML("afterbegin", sectionProducts.render());


                document.getElementById("app").insertAdjacentHTML("afterbegin", hero.render());
                document.getElementById("app").insertAdjacentHTML("afterbegin", whatsappWidget.render());
                document.getElementById("app").insertAdjacentHTML("afterbegin", modalLogin.render());
                document.getElementById("app").insertAdjacentHTML("beforeend", footer.render());


                // const ROUTER = new Router(paths);


                // document.getElementById('Home').addEventListener('click', function () {
                //     ROUTER.load('home')
                // });

                // document.getElementById('About').addEventListener('click', function () {
                //     ROUTER.load('about')
                // });

                // document.getElementById('Contact').addEventListener('click', function () {
                //     ROUTER.load('contact')
                // });

            } catch (error) {
                console.error(error);
            } finally {
                console.log('App iniciada...', start.getMilliseconds());
                setTimeout(() => {
                    loadingScreen.dissmiss();
                    document.querySelector('body').classList.remove('stop-scrolling');
                }, 3000);

                $("#langSelector").niceSelect();
                $(".nice-select>ul.list>li.option[data-value='en']").prepend('<i class="flag-icon flag-icon-us"></i> ');
                $(".nice-select>ul.list>li.option[data-value='es']").prepend('<i class="flag-icon flag-icon-mx"></i> ');
                $(".nice-select>.current").prepend('<i class="flag-icon flag-icon-mx"></i> ');

                i18Loader();
            }
        }

        const i18Loader = async () => {

            const langs = ["es", "en"];
            // const jsons = await Promise.all(
            //     langs.map((l) => fetch(`/i18n/${l}.json`).then((r) => r.json()))
            // );

            console.log(i18Jsons);

            const res = langs.reduce((acc, l, idx) => {
                acc[l] = {
                    translation: i18Jsons[idx]
                };
                return acc;
            }, {});
            await i18next.init({
                lng: "es",
                debug: false,
                resources: res
            });
            updateContent();
            i18next.on("languageChanged", () => {
                updateContent();
            });
            const langSelector = document.getElementById("langSelector");
            langSelector.removeAttribute("disabled");
            // langSelector.addEventListener("change", (e) => {
            //     i18next.changeLanguage(e.target.value);
            // });

            $('#langSelector').on('change', function (e) {
                i18next.changeLanguage(e.target.value);

                if (e.target.value == "es") {
                    $(".nice-select>.current").prepend('<i class="flag-icon flag-icon-mx"></i> ');
                }

                if (e.target.value == "en") {
                    $(".nice-select>.current").prepend('<i class="flag-icon flag-icon-us"></i> ');
                }

            });

        }

        const updateContent = () => {
            const elements = document.getElementsByClassName("i18nelement");
            for (let i = 0; i < elements.length; i++) {
                const element = elements[i];
                const k = element.getAttribute("data-i18n");
                element.innerHTML = i18next.t(k);
            }
        }

        return {
            init: init
        };
    })();


    $(document).ready(function () {
        APP.init();

        var nav = document.querySelector('nav');
        window.addEventListener('scroll', function () {
            if (window.pageYOffset > 100) {
                nav.classList.add('bg-dark-transparent', 'shadow');
            } else {
                nav.classList.remove('bg-dark-transparent', 'shadow');
            }
        });

        const counter = document.querySelectorAll('.counter_value');
        const speed = 1200; // The lower the slower
        counter.forEach(counter_value => {
            const updateCount = () => {
                const target = +counter_value.getAttribute('data-target');
                const count = +counter_value.innerText;
                const inc = target / speed;
                // Check if target is reached
                if (count < target) {
                    // Add inc to count and output in counter_value
                    counter_value.innerText = (count + inc).toFixed(0);
                    // Call function every ms
                    setTimeout(updateCount, 1);
                } else {
                    counter_value.innerText = target;
                }
            };
            updateCount();
        });

        ScrollReveal().reveal('#containerVideo');
        ScrollReveal().reveal('#productos');


    });

})(jQuery);